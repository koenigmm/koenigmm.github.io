/* Generated by JSIL v0.8.2 build 16640. See http://jsil.org/ for more information. */ 
'use strict';
var $asm0A = JSIL.DeclareAssembly("Fusee.Tutorial.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Tutorial");
JSIL.DeclareNamespace("Fusee.Tutorial.Core");
/* class Fusee.Tutorial.Core.AssetsPicking */ 

(function AssetsPicking$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm08.Fusee.Serialization.TransformComponent)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.Fusee.Math.Core.float3)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm08.Fusee.Serialization.SceneContainer)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0E.System.Collections.Generic.List$b1.Of($asm08.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm08.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0E.System.Collections.Generic.List$b1.Of($asm08.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm08.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm08.Fusee.Serialization.MatChannelContainer)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm08.Fusee.Serialization.SpecularChannelContainer)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0A.Fusee.Tutorial.Core.SimpleMeshes)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0E.System.Predicate$b1.Of($asm08.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm07.Fusee.Math.Core.float4)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0E.System.Collections.Generic.IEnumerable$b1.Of($asm08.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0A.Fusee.Tutorial.Core.AssetsPicking_$l$gc)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0C.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm12.System.Linq.Enumerable)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0C.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm04.Fusee.Engine.Core.SceneRenderer)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm07.Fusee.Math.Core.float4x4)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm0E.System.Single)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm04.Fusee.Engine.Core.Time)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm07.Fusee.Math.Core.M)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm0E.System.Math)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm0E.System.Double)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.Fusee.Math.Core.float3, [
        $asm0E.System.Single, $asm0E.System.Single, 
        $asm0E.System.Single
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0E.System.Collections.Generic.List$b1.Of($asm08.Fusee.Serialization.SceneNodeContainer), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0E.System.Collections.Generic.List$b1.Of($asm08.Fusee.Serialization.SceneComponentContainer), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm08.TypeRef("Fusee.Serialization.SceneComponentContainer")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.Fusee.Math.Core.float4, [
        $asm0E.System.Single, $asm0E.System.Single, 
        $asm0E.System.Single, $asm0E.System.Single
      ]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm0E.System.Boolean, [$asm08.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm0E.System.Collections.Generic.IEnumerable$b1.Of($asm08.Fusee.Serialization.SceneNodeContainer), [$asm0E.System.Collections.Generic.IEnumerable$b1.Of($asm08.Fusee.Serialization.SceneNodeContainer), $asm0E.System.Predicate$b1.Of($asm08.Fusee.Serialization.SceneNodeContainer)]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0E.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($asm0E.System.Boolean, [$asm08.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm0E.System.Boolean, [$asm08.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm0E.System.Boolean, [$asm08.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm0E.System.Boolean, [$asm08.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm0E.System.Boolean, [$asm08.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.Fusee.Engine.Core.SceneRenderer, [$asm08.Fusee.Serialization.SceneContainer]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature($asm07.Fusee.Math.Core.float4x4, [$asm07.Fusee.Math.Core.float4x4, $asm07.Fusee.Math.Core.float4x4]))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.MethodSignature($asm07.Fusee.Math.Core.float3, [$asm07.Fusee.Math.Core.float3, $asm0E.System.Single]))) ();
  };


  function AssetsPicking__ctor () {
    this._camAngle = 0;
    this._camAngleVelocity = 0;
    this._d = 20;
    $T00().prototype._ctor.call(this);
  }; 

  function AssetsPicking_CreateScene () {
    var expr_07 = new ($T01())();
    expr_07.Rotation = $S00().Construct(0, 0, 0);
    expr_07.Scale = $S00().Construct(1, 1, 1);
    expr_07.Translation = $S00().Construct(0, 0, 0);
    this._baseTransform = expr_07;
    var expr_5F = new ($T03())();
    var expr_65 = $S01().Construct();
    var expr_6B = new ($T05())();
    var expr_71 = $S02().Construct();
    $S03().CallVirtual("Add", null, expr_71, this._baseTransform);
    var expr_84 = new ($T07())();
    var expr_8A = new ($T08())();
    expr_8A.Color = $S00().Construct(0.7, 0.7, 0.7);
    expr_84.Diffuse = expr_8A;
    var expr_AF = new ($T09())();
    expr_AF.Color = $S00().Construct(1, 1, 1);
    expr_AF.Shininess = 5;
    expr_84.Specular = expr_AF;
    $S03().CallVirtual("Add", null, expr_71, expr_84);
    $S03().CallVirtual("Add", null, expr_71, $T0A().CreateCuboid($S00().Construct(10, 10, 10)));
    expr_6B.Components = expr_71;
    $S04().CallVirtual("Add", null, expr_65, expr_6B);
    expr_5F.Children = expr_65;
    return expr_5F;
  }; 

  function AssetsPicking_Init () {
    var arg_61_1 = null, arg_AF_1 = null, arg_FD_1 = null, arg_14B_1 = null, arg_199_1 = null, arg_1E7_1 = null;
    (this.RenderCanvas$RC$value.ClearColor = $S05().Construct(0.8, 0.9, 0.7, 1));
    this._scene = $T0E().Get$b1($T03())("rosimple.fus");
    var arg_61_0 = this._scene.Children;
    if ((arg_61_1 = $T10().$l$g9__14_0) === null) {
      arg_61_1 = $T10().$l$g9__14_0 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__14_0", $S06(), false, false));
    }
    var expr_66 = $S07().CallStatic($T11(), "FindNodes", null, arg_61_0, arg_61_1);
    if (expr_66 === null) {
      var arg_7F_1 = null;
    } else {
      var expr_72 = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_66);
      arg_7F_1 = (
        (expr_72 !== null)
           ? $T13().GetTransform(expr_72, 0)
           : null)
      ;
    }
    this._leftFrontTransform = arg_7F_1;
    var arg_AF_0 = this._scene.Children;
    if ((arg_AF_1 = $T10().$l$g9__14_1) === null) {
      arg_AF_1 = $T10().$l$g9__14_1 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__14_1", $S09(), false, false));
    }
    var expr_B4 = $S07().CallStatic($T11(), "FindNodes", null, arg_AF_0, arg_AF_1);
    if (expr_B4 === null) {
      var arg_CD_1 = null;
    } else {
      var expr_C0 = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_B4);
      arg_CD_1 = (
        (expr_C0 !== null)
           ? $T13().GetTransform(expr_C0, 0)
           : null)
      ;
    }
    this._rightFrontTransform = arg_CD_1;
    var arg_FD_0 = this._scene.Children;
    if ((arg_FD_1 = $T10().$l$g9__14_2) === null) {
      arg_FD_1 = $T10().$l$g9__14_2 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__14_2", $S0A(), false, false));
    }
    var expr_102 = $S07().CallStatic($T11(), "FindNodes", null, arg_FD_0, arg_FD_1);
    if (expr_102 === null) {
      var arg_11B_1 = null;
    } else {
      var expr_10E = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_102);
      arg_11B_1 = (
        (expr_10E !== null)
           ? $T13().GetTransform(expr_10E, 0)
           : null)
      ;
    }
    this._leftRearTransform = arg_11B_1;
    var arg_14B_0 = this._scene.Children;
    if ((arg_14B_1 = $T10().$l$g9__14_3) === null) {
      arg_14B_1 = $T10().$l$g9__14_3 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__14_3", $S0B(), false, false));
    }
    var expr_150 = $S07().CallStatic($T11(), "FindNodes", null, arg_14B_0, arg_14B_1);
    if (expr_150 === null) {
      var arg_169_1 = null;
    } else {
      var expr_15C = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_150);
      arg_169_1 = (
        (expr_15C !== null)
           ? $T13().GetTransform(expr_15C, 0)
           : null)
      ;
    }
    this._rightRearTransform = arg_169_1;
    var arg_199_0 = this._scene.Children;
    if ((arg_199_1 = $T10().$l$g9__14_4) === null) {
      arg_199_1 = $T10().$l$g9__14_4 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__14_4", $S0C(), false, false));
    }
    var expr_19E = $S07().CallStatic($T11(), "FindNodes", null, arg_199_0, arg_199_1);
    if (expr_19E === null) {
      var arg_1B7_1 = null;
    } else {
      var expr_1AA = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_19E);
      arg_1B7_1 = (
        (expr_1AA !== null)
           ? $T13().GetTransform(expr_1AA, 0)
           : null)
      ;
    }
    this._greiferTransofrm = arg_1B7_1;
    var arg_1E7_0 = this._scene.Children;
    if ((arg_1E7_1 = $T10().$l$g9__14_5) === null) {
      arg_1E7_1 = $T10().$l$g9__14_5 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__14_5", $S0D(), false, false));
    }
    var expr_1EC = $S07().CallStatic($T11(), "FindNodes", null, arg_1E7_0, arg_1E7_1);
    if (expr_1EC === null) {
      var arg_205_1 = null;
    } else {
      var expr_1F8 = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_1EC);
      arg_205_1 = (
        (expr_1F8 !== null)
           ? $T13().GetTransform(expr_1F8, 0)
           : null)
      ;
    }
    this._roverTransform = arg_205_1;
    var expr_210 = new ($T01())();
    expr_210.Rotation = $S00().Construct(-0.55115664, 0, 0);
    expr_210.Scale = $T02().One.MemberwiseClone();
    expr_210.Translation = $S00().Construct(0, 0, 10);
    this._trailerTransform = expr_210;
    this._sceneRenderer = $S0E().Construct(this._scene);
    var expr_275 = new ($T05())();
    var expr_27B = $S02().Construct();
    $S03().CallVirtual("Add", null, expr_27B, this._trailerTransform);
    var expr_28E = new ($T07())();
    var expr_294 = new ($T08())();
    expr_294.Color = $S00().Construct(0.7, 0.7, 0.7);
    expr_28E.Diffuse = expr_294;
    var expr_2B9 = new ($T09())();
    expr_2B9.Color = $S00().Construct(1, 1, 1);
    expr_2B9.Shininess = 5;
    expr_28E.Specular = expr_2B9;
    $S03().CallVirtual("Add", null, expr_27B, expr_28E);
    $S03().CallVirtual("Add", null, expr_27B, $T0A().CreateCuboid($S00().Construct(2, 2, 2)));
    expr_275.Components = expr_27B;
    $S04().CallVirtual("Add", null, this._scene.Children, expr_275);
  }; 

  function AssetsPicking_RenderAFrame () {
    (this.RenderCanvas$RC$value).Clear($T15().$Flags("Color", "Depth"));
    (this.RenderCanvas$RC$value.View = $S0F().CallStatic($T16(), "op_Multiply", null, 
        $S0F().CallStatic($T16(), "op_Multiply", null, 
          $T16().CreateRotationX(-0.430355161).MemberwiseClone(), 
          $T16().CreateRotationY(3.14159274 - +this._trailerTransform.Rotation.y).MemberwiseClone()
        ).MemberwiseClone(), 
        $T16().CreateTranslation(-this._trailerTransform.Translation.x, -6, -this._trailerTransform.Translation.z).MemberwiseClone()
      ).MemberwiseClone());
    var posVel = +$T19().get_Keyboard().get_WSAxis() * +$T1A().get_DeltaTime();
    var rotVel = +$T19().get_Keyboard().get_ADAxis() * +$T1A().get_DeltaTime();
    var newRot = +this._roverTransform.Rotation.y + rotVel;
    this._roverTransform.Rotation = $S00().Construct(0, newRot, 0);
    var pBalt = this._trailerTransform.Translation.MemberwiseClone();
    var pAneu = $T02().op_Addition(this._roverTransform.Translation.MemberwiseClone(), $S00().Construct(((-10 * posVel) * +$T1B().Sin(newRot)), 0, (-10 * posVel)));
    this._roverTransform.Translation = pAneu.MemberwiseClone();
    var pBneu = $T02().op_Addition(pAneu.MemberwiseClone(), $S10().CallStatic($T02(), "op_Multiply", null, $T02().Normalize($T02().op_Subtraction(pBalt.MemberwiseClone(), pAneu).MemberwiseClone()).MemberwiseClone(), this._d));
    this._trailerTransform.Translation = pBneu.MemberwiseClone();
    this._trailerTransform.Rotation = $S00().Construct(0, Math.fround(Math.atan2($T02().Normalize($T02().op_Subtraction(pBalt.MemberwiseClone(), pAneu).MemberwiseClone()).x, $T02().Normalize($T02().op_Subtraction(pBalt.MemberwiseClone(), pAneu).MemberwiseClone()).z)), 0);
    (this.RenderCanvas$RC$value.View = $S0F().CallStatic($T16(), "op_Multiply", null, 
        $S0F().CallStatic($T16(), "op_Multiply", null, 
          $T16().CreateRotationX(-0.430355161).MemberwiseClone(), 
          $T16().CreateRotationY(3.14159274 - +this._trailerTransform.Rotation.y).MemberwiseClone()
        ).MemberwiseClone(), 
        $T16().CreateTranslation(-this._trailerTransform.Translation.x, -6, -this._trailerTransform.Translation.z).MemberwiseClone()
      ).MemberwiseClone());
    (this._sceneRenderer).Render(this.RenderCanvas$RC$value);
    this.Present();
  }; 

  function AssetsPicking_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspectRatio = +((+(this.get_Width()) / +(this.get_Height())));
    var projection = $T16().CreatePerspectiveFieldOfView(0.7853982, aspectRatio, 1, 20000);
    (this.RenderCanvas$RC$value.Projection = projection.MemberwiseClone());
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.Tutorial.Core.AssetsPicking", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AssetsPicking__ctor
    );

    $.Method({Static:false, Public:false}, "CreateScene", 
      JSIL.MethodSignature.Return($asm08.TypeRef("Fusee.Serialization.SceneContainer")), 
      AssetsPicking_CreateScene
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      AssetsPicking_Init
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      AssetsPicking_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      AssetsPicking_Resize
    );

    $.Field({Static:false, Public:false}, "_scene", $asm08.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_sceneRenderer", $asm04.TypeRef("Fusee.Engine.Core.SceneRenderer"));

    $.Field({Static:false, Public:false}, "_camAngle", $.Single);

    $.Field({Static:false, Public:false}, "_baseTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_rightRearTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_leftRearTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_rightFrontTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_leftFrontTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_greiferTransofrm", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_roverTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_camAngleVelocity", $.Single);

    $.Field({Static:false, Public:false}, "_trailerTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_d", $.Single);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.AssetsPicking+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm08.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0E.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$lInit$gb__14_0 (node) {
    return node.Name == "reifenVL";
  }; 

  function $l$gc_$lInit$gb__14_1 (node) {
    return node.Name == "reifenVR";
  }; 

  function $l$gc_$lInit$gb__14_2 (node) {
    return node.Name == "ReifenHL";
  }; 

  function $l$gc_$lInit$gb__14_3 (node) {
    return node.Name == "reifenHR";
  }; 

  function $l$gc_$lInit$gb__14_4 (node) {
    return node.Name == "greifer";
  }; 

  function $l$gc_$lInit$gb__14_5 (node) {
    return node.Name == "auto";
  }; 

  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.AssetsPicking+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__14_0", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__14_0
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__14_1", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__14_1
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__14_2", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__14_2
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__14_3", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__14_3
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__14_4", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__14_4
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__14_5", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__14_5
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__14_0", $asm0E.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__14_1", $asm0E.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__14_2", $asm0E.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__14_3", $asm0E.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__14_4", $asm0E.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__14_5", $asm0E.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Tutorial.Core.SimpleMeshes */ 

(function SimpleMeshes$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0E.System.Single)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0E.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0E.System.NotImplementedException)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.Fusee.Math.Core.float3)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm08.Fusee.Serialization.MeshComponent)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0E.System.UInt16)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm07.Fusee.Math.Core.float2)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm07.Fusee.Math.Core.AABBf)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize(System.Array.Of($asm07.Fusee.Math.Core.float3))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm0E.System.UInt16))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm07.Fusee.Math.Core.M)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0E.System.NotImplementedException, null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.Fusee.Math.Core.float3, [
        $asm0E.System.Single, $asm0E.System.Single, 
        $asm0E.System.Single
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.Fusee.Math.Core.float2, [$asm0E.System.Single, $asm0E.System.Single]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm07.Fusee.Math.Core.float3, [$asm0E.System.Single, $asm07.Fusee.Math.Core.float3]))) ();
  };


  function SimpleMeshes_CreateCone (radius, height, segments) {
    return $thisType.CreateConeFrustum(radius, 0, height, segments);
  }; 

  function SimpleMeshes_CreateConeFrustum (radiuslower, radiusupper, height, segments) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateCuboid (size) {
    var meshComponent = new ($T04())();
    meshComponent.Vertices = JSIL.Array.New($T03(), [$S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z))]);
    meshComponent.Normals = JSIL.Array.New($T03(), [$S01().Construct(-1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, -1), $S01().Construct(-1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, 1), $S01().Construct(-1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, -1), $S01().Construct(-1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, 1), $S01().Construct(1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, -1), $S01().Construct(1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, 1), $S01().Construct(1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, -1), $S01().Construct(1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, 1)]);
    meshComponent.Triangles = JSIL.Array.New($T05(), [0, 6, 3, 3, 6, 9, 2, 14, 20, 2, 20, 8, 12, 15, 18, 15, 21, 18, 5, 11, 17, 17, 11, 23, 7, 22, 10, 7, 19, 22, 1, 4, 16, 1, 16, 13]);
    meshComponent.UVs = JSIL.Array.New($T06(), [$S02().Construct(1, 0), $S02().Construct(1, 0), $S02().Construct(0, 0), $S02().Construct(0, 0), $S02().Construct(1, 1), $S02().Construct(1, 0), $S02().Construct(1, 1), $S02().Construct(0, 0), $S02().Construct(0, 1), $S02().Construct(0, 1), $S02().Construct(0, 1), $S02().Construct(1, 1), $S02().Construct(0, 0), $S02().Construct(0, 0), $S02().Construct(1, 0), $S02().Construct(1, 0), $S02().Construct(0, 1), $S02().Construct(0, 0), $S02().Construct(0, 1), $S02().Construct(1, 0), $S02().Construct(1, 1), $S02().Construct(1, 1), $S02().Construct(1, 1), $S02().Construct(0, 1)]);
    meshComponent.BoundingBox = new ($T07())($S03().CallStatic($T03(), "op_Multiply", null, -0.5, size.MemberwiseClone()).MemberwiseClone(), $S03().CallStatic($T03(), "op_Multiply", null, 0.5, size.MemberwiseClone()).MemberwiseClone());
    return meshComponent;
  }; 

  function SimpleMeshes_CreateCylinder (radius, height, segments) {
    var verts = JSIL.Array.New($T03(), (((segments | 0) + 1) | 0));
    var norms = JSIL.Array.New($T03(), (((segments | 0) + 1) | 0));
    var tris = JSIL.Array.New($T05(), Math.imul(segments, 3));
    var delta = +((6.28318548 / +segments));
    verts[segments] = $T03().Zero.MemberwiseClone();
    norms[segments] = $T03().UnitY.MemberwiseClone();
    verts[0] = $S01().Construct(radius, 0, 0);
    norms[0] = $T03().UnitY.MemberwiseClone();

    for (var i = 1; i < (segments | 0); i = ((i + 1) | 0)) {
      verts[i] = $S01().Construct((+radius * +$T0A().Cos(+i * delta)), 0, (+radius * +$T0A().Sin(+i * delta)));
      norms[i] = $T03().UnitY.MemberwiseClone();
      tris[((Math.imul(3, i) - 1) | 0)] = (segments & 0xFFFF);
      tris[((Math.imul(3, i) - 2) | 0)] = (i & 0xFFFF);
      tris[((Math.imul(3, i) - 3) | 0)] = (((i - 1) | 0) & 0xFFFF);
    }
    tris[((Math.imul(3, segments) - 1) | 0)] = (segments & 0xFFFF);
    tris[((Math.imul(3, segments) - 2) | 0)] = 0;
    tris[((Math.imul(3, segments) - 3) | 0)] = ((((segments | 0) - 1) | 0) & 0xFFFF);
    var expr_F2 = new ($T04())();
    expr_F2.Vertices = verts;
    expr_F2.Normals = norms;
    expr_F2.Triangles = tris;
    return expr_F2;
  }; 

  function SimpleMeshes_CreatePyramid (baselen, height) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateTetrahedron (edgelen) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateTorus (mainradius, segradius, segments, slices) {
    throw $S00().Construct();
  }; 

  JSIL.MakeStaticClass("Fusee.Tutorial.Core.SimpleMeshes", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "CreateCone", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [
          $.Single, $.Single, 
          $.Int32
        ]), 
      SimpleMeshes_CreateCone
    );

    $.Method({Static:true , Public:true }, "CreateConeFrustum", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [
          $.Single, $.Single, 
          $.Single, $.Int32
        ]), 
      SimpleMeshes_CreateConeFrustum
    );

    $.Method({Static:true , Public:true }, "CreateCuboid", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [$asm07.TypeRef("Fusee.Math.Core.float3")]), 
      SimpleMeshes_CreateCuboid
    );

    $.Method({Static:true , Public:true }, "CreateCylinder", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [
          $.Single, $.Single, 
          $.Int32
        ]), 
      SimpleMeshes_CreateCylinder
    );

    $.Method({Static:true , Public:true }, "CreatePyramid", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [$.Single, $.Single]), 
      SimpleMeshes_CreatePyramid
    );

    $.Method({Static:true , Public:true }, "CreateTetrahedron", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [$.Single]), 
      SimpleMeshes_CreateTetrahedron
    );

    $.Method({Static:true , Public:true }, "CreateTorus", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [
          $.Single, $.Single, 
          $.Int32, $.Int32
        ]), 
      SimpleMeshes_CreateTorus
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class <PrivateImplementationDetails> */ 

(function $lPrivateImplementationDetails$g$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Object"), 
      Name: "<PrivateImplementationDetails>", 
      IsPublic: false, 
      IsReferenceType: true, 
    }, function ($ib) {
    $ = $ib;


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0E.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

